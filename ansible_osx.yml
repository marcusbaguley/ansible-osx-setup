---
- hosts: localhost
  tasks:
    - name: Check if Homebrew is installed
      shell: which brew
      register: homebrew_check
      ignore_errors: yes

    - name: Install Homebrew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when: homebrew_check.rc != 0

    - name: Ensure Homebrew is in the PATH
      shell: echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/{{ ansible_user_id }}/.zprofile
      when: homebrew_check.rc != 0

    - name: Update Homebrew to the latest version
      shell: brew update
      when: homebrew_check.rc == 0 or (homebrew_check.rc != 0 and ansible_user_id == "your_username")

  #name: Setup dnsmasq
    # include_role:
    #   name: dnsmasq

<<<<<<< HEAD
=======
    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: [
          homebrew/cask-versions,
          thoughtbot/formulae,
          weaveworks/tap,
        ]

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - 1password
        - iterm2
        # - ngrok
        # - osxfuse
        # - postico
        - slack
        # - telegram
        # - tunnelblick
        - visual-studio-code
        # - vlc
        # - zeplin
        # - zoom
        # - microsoft-teams

    - name: "Install homebrew packages"
      tags: brew
      community.general.homebrew:
        name: [
          'autoconf',
          'automake',
          'aws-iam-authenticator',
          'awscli',
          'bfg',
          'coreutils',
          'curl',
          'dbt@0.18.0',
          'direnv',
          'dnsmasq',
          'erlang',
          'fzf',
          'gnu-time',
          'gpg',
          'htop',
          'libtool',
          'libxslt',
          'libyaml',
          'mas',
          'openssl',
          'pick',
          'jq',
          'r',
          'rcm',
          'readline',
          'sqlite3',
          'siege',
          'tmux',
          'the_silver_searcher',
          'unzip',
          'vim',
          'watchman',
          'wget',
          'weaveworks/tap/eksctl',
          'xz',
          'yarn',
          'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    - name: "Link ImageMagick6 as main version (for rmagick gem)"
      shell: brew link -f imagemagick@6

    - name: Get the path to ZSH
      tags: zsh
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

>>>>>>> a42a82a (slim down)
    - name: Install Oh My ZSH
      tags: zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      tags: zsh
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: "Create a default ZSH configuration"
      tags: zsh
      template:
        src: templates/.zshrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

<<<<<<< HEAD
    - name: "Install asdf"
      tags: asdf1
      git:
=======
    - git:
>>>>>>> a42a82a (slim down)
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"

    - name: "Create a default asdf configuration"
      tags: asdf
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      tags: asdf
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - ruby
        - nodejs
        - terraform
        - kubectl
        - aws-sam-cli

    - name: Install session manager plugin
      tags: aws
      args:
        creates: /usr/local/bin/session-manager-plugin
      become: true
      shell: |
        mkdir -p /Users/{{ lookup('env', 'USER') }}/tmp-sm
        cd /Users/{{ lookup('env', 'USER') }}/tmp-sm
        curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/mac/sessionmanager-bundle.zip" -o "sessionmanager-bundle.zip"
        unzip sessionmanager-bundle.zip
        sudo ./sessionmanager-bundle/install -i /usr/local/sessionmanagerplugin -b /usr/local/bin/session-manager-plugin
        rm -rf /Users/{{ lookup('env', 'USER') }}/tmp-sm

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.12.3
        asdf global python 3.12.3
        pip3 install boto
        pip3 isntall numpy
        pip3 install scipy
        pip3 install matplotlib
        pip3 install ipython
        pip3 install jupyter
        pip3 install pandas
        pip3 install sympy
        pip3 install nose
        pip3 install scikit-learn
        asdf reshim python

    - name: "Install Default Ruby"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install ruby 3.2.1
        asdf global ruby 3.2.1
        gem install bundler
        gem install cocoapods
        gem install rubocop
        gem install solargraph
        gem install standard
